% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_rank_ags.R
\name{test_rank_ags}
\alias{test_rank_ags}
\alias{rank_test_ags}
\title{Test of rank position}
\usage{
test_rank_ags(
  input_df,
  additional_sig = c(NULL, additional_sig),
  gs_column = c(NULL, gs_column),
  gene_symbol = c(NULL, gene_symbol),
  species = c(NULL, "Homo sapiens", "Mus musculus"),
  category = c(NULL, "H", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8"),
  subcategory = c(NULL, "CGP", "CP", "MIR", "TFT", "3CA", "CGN", "CM", "GO", "HPO",
    "IMMUNESIGDB", "VAX")
)
}
\arguments{
\item{input_df}{A dataframe with two columns. This table is possible to obtain from gsadapt function}

\item{additional_sig}{Dataframe containing gene set collection out of GSEA collection}

\item{gs_column}{Name of the column of additional_sig file containing gene set names out of GSEA collection}

\item{gene_symbol}{Name of the column of additional_sig file. Gene name.}

\item{species}{Parameter of msigdbr}

\item{category}{Parameter of msigdbr}

\item{subcategory}{Parameter of msigdbr}
}
\value{
list of dataframes with information about rank, gene symbol and gene size based on hypergeometric function
}
\description{
Evaluation of rank position of each adapted gene set using hypergeometric formula
}
\details{
test_rank_ags
}
\examples{

## One signature from GSEA 
library(msigdbr)
library(clusterProfiler)

input_df <- msigdbr(species = "Homo sapiens", category = "H", subcategory = NULL)
input_df <- input_df \%>\% dplyr::select(gene_symbol, gs_name) 
input_df <- input_df \%>\% dplyr::filter(gs_name=="HALLMARK_ANGIOGENESIS")

# The first ten genes from angiogenesis gene set was selected as an example
input_df <- as.data.frame(input_df[1:10,])

Summary_table <- test_rank_ags(input_df,species="Homo sapiens",category="H",subcategory=NULL,additional_sig=NULL)

## Multiple signatures from GSEA

input_df <- msigdbr(species = "Homo sapiens", category = "H", subcategory = NULL) 
input_df <- input_df \%>\% dplyr::select(gene_symbol, gs_name) 
random_genes <- sample(input_df$gene_symbol,2000)
input_df <- input_df \%>\% dplyr::filter(gene_symbol \%in\% random_genes)

Summary_table <- test_rank_ags(input_df,species="Homo sapiens",category="H",subcategory=NULL,additional_sig=NULL)

}
